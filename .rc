. /etc/profile

export EDITOR=vim
export BROWSER=chromium
export PAGER='less -R -F -X -S -n -i -m'

export GOPATH=~/projects/go
export PATH="$(echo {$HOME,,/opt,/usr,/usr/local}/{bin,sbin} | tr ' ' :):$(echo $HOME/.gem/ruby/*/bin | tr ' ' :):/usr/bin/vendor_perl:/usr/bin/core_perl:$GOPATH/bin"
export GIT_COMMITTER_NAME='Artem Sheremet'
export GIT_COMMITTER_EMAIL='dot.doom@gmail.com'
export DOOMWADDIR=~/dist/games/doom/wad
export GEM_HOME=~/.gem/ruby/2.1.0
export DE=generic

# redefinitions
if [ "$(uname -s)" = "Linux" ]; then
	LS_VER=$(/bin/ls --version )
	LS_VER=${LS_VER/.*/}
	LS_VER=${LS_VER/* /}
	if [ $LS_VER -lt 8 ]; then
		alias ls='ls -hF --color=auto'
	else
		alias ls='ls -hF --color=auto --group-directories-first'
	fi
	alias pgrep='pgrep -lf'
	alias crontab='crontab -i'
	alias gmake='make'

	function ds() {
		du -sh "$@" | sort -rh
	}
elif [ "$(uname -s)" = "FreeBSD" ]; then
	export LSCOLORS=ExGxFxFxCxdxDxabagacac
	alias ls='ls -hFIG'
	alias pgrep='pgrep -laf'
	alias stat="/usr/bin/stat -f \"  File: '%N'%SY%n  Size: %-15z Blocks: %-10b IO Block: %-6k %HT%nDevice: %7Hr/%-7Lr Inode: %-11i Links: %l%nAccess: (%Mp%Lp/%Sp) Uid: (%5u/%8Su)  Gid: (%5g/%8Sg)%nAccess: %Sa%nModify: %Sm%nChange: %Sc%n Birth: %SB\" -t '%F %T %z'"

	function ds() {
		du -sh "$@" | perl -e '
			%byte_order = ( G => 0, M => 1, K => 2, k => 2, 0 => 3 );
			print map { $_->[0] } sort { $byte_order{$a->[1]} <=> $byte_order{$b->[1]} || $b->[2] <=> $a->[2] } map { [ $_, /^\s*[\d.]+([MGKk0])/, /^\s*([\d.]+)/ ] } <>'
	}
fi
alias nc='nc -vv'
alias snc='openssl s_client -connect '
alias vsnc='openssl s_client -showcerts -state -msg -debug -connect '
alias killall='killall -v -r'
alias scrot='scrot -e "mv \$f ~/Pictures/ 2>/dev/null" -cd 5'
alias qiv='qiv -fml -M'
alias qivr='qiv -u'
alias grep='grep --line-buffered --color=auto'
alias fgrep='grep -Frn --color=always'
alias figrep='fgrep -i'
alias svn='svn --no-auth-cache'
alias mysql='mysql --select_limit=1000'
alias ka='killall'
alias fsck='fsck -C'
alias pager=$PAGER
alias npager='pager -N'
alias l='ls -lA'
alias ll='ls -la'
alias la='cat /proc/loadavg'
alias ipt='iptables -nvL --line-numbers'
alias psa='ps axfo pid,euser,bsdstart,vsz,rss,bsdtime,args'
alias parent='ps -p $PPID -o comm='
alias dbgrep='dbgrep.pl -vpuroot'
alias tcpdump='tcpdump -l'
alias pacman='pacman --color auto'
alias xo=xdg-open

function i4() {
	if [ $# -eq 0 ]; then
		curl --silent http://ipecho.net/plain; echo
	else
		ip addr show "$1" | sed -nr 's/\s+inet ([0-9.]+)\/.*/\1/p'
	fi
}

function prepend-timestamp() {
	gawk '{ print strftime("[%Y-%m-%d %H:%M:%S]"), $0; fflush() }'
}

# mysqldump extraction
function mysql_extract_db() {
	sed -n "/^-- Current Database: \`$1\`/,/^-- Current Database: \`/p"
}
function mysql_extract_table() {
	sed -n "/^-- Table structure for table \`$1\`/,/^-- Table structure for table \`/p"
}

# LOL protect me
alias mv='mv -i'
alias cp='cp -i'
alias rm='rm -i'

# git aliases
alias gb='git branch'
alias gba='git branch -av'
alias gc='git commit -v'
alias gd='git di'
alias gdc='gd --cached'
alias gdm='gd master --stat --relative'
alias gl='git pull'
alias gp='git push'
alias gst='git status'

# sudo
alias sudo='sudo -E '
alias su='su -m'

# work
function webui() {
	if [ -n "$1" ]; then
		if [ "$1" = "trunk" ]; then
			webui="${RAILS/BRANCH/trunk}"
		else
			webui="${RAILS/BRANCH/branches/$1}"
		fi
		echo $webui >~/.webui
	else
		[ -s ~/.webui ] && webui=$(<~/.webui)
	fi
	cd $webui
}

# useful stuff
[ -z "$VIM_ORIGINAL" ] && VIM_ORIGINAL="$(which vim)"
function vim() {
	if [ "$TERM" = "linux" ]; then
		local COMPAT_TERM=$TERM
	else
		local COMPAT_TERM="xterm-256color"
	fi
	# we only handle single-argument VIM
	if [ $# -eq 1 ]; then
		if [ -e "$1" ]; then
			# editing an existing file
			FILENAME="$1"
		else
			# trying to create new file, will check it's directory for WRITE access
			FILENAME="`dirname $1 2>/dev/null`"
		fi

		if [ -w "$FILENAME" ]; then
			# yahoo! writable
			TERM=$COMPAT_TERM "$VIM_ORIGINAL" "$1"
		else
			echo 'this file will be opened with sudo'
			TERM=$COMPAT_TERM sudo "$VIM_ORIGINAL" "$1" || "$VIM_ORIGINAL" "$1"
		fi
	else
		TERM=$COMPAT_TERM "$VIM_ORIGINAL" $*
	fi
}

function dl() {
	for entry in "$@"; do
		printf '%-7d %s\n' $(find $entry | wc -l) "$entry"
	done | sort -rn
}

function mkcd() {
	mkdir -p "$@"
	cd "$@"
}
function cpcd() {
	cp "$@"
	cd $_
}
function cdls() {
	cd "$1"
	shift
	ls "$@"
}

function cap() {
	local bakdir="$HOME/.cap-stash"
	mkdir -p "$bakdir"
	local bakfile="$bakdir/${1//\//%}"
	if [ "$#" -gt 1 ]; then
		cp -p "$1" "$bakfile"
		mv "$2" "$1"
	else
		mv "$bakfile" "$1"
	fi
}

function fin() {
	local filename="$1"
	[ $# -gt 1 ] && shift
	find "$@" -iname "*$filename*"
}

function tt() {
	tail -f "$@" | while read line; do echo -n $(date); echo -e "\t$line"; done
}

function ip4tables-fwd() {
	if [ $# -eq 1 ]; then
		local SRC_ADDR="$(i4)"
		local DST_ADDR="$1"
	elif [ $# -eq 2 ]; then
		local SRC_ADDR="$1"
		local DST_ADDR="$2"
	else
		echo "Usage: $0 [<src-addr:src-port>] <dst-addr:dst-port>" >&2
		return 1
	fi

	local SRC_HOST=${SRC_ADDR/:*/}
	if [ "$SRC_HOST" != "$SRC_ADDR" ]; then
		local SRC_PORT=${SRC_ADDR/*:/}
	fi

	local DST_HOST=${DST_ADDR/:*/}
	if [ "$DST_HOST" = "$DST_ADDR" ]; then
		if [ -z "$SRC_PORT" ]; then
			echo "Cannot detect forwarding port. At least one address must have it's port specified." >&2
			return 1
		fi
		local DST_PORT=$SRC_PORT
	else
		local DST_PORT=${DST_ADDR/*:/}
	fi

	[ -z "$SRC_PORT" ] && local SRC_PORT=$DST_PORT

	echo "To forward <$SRC_HOST> port <$SRC_PORT> to <$DST_HOST> port <$DST_PORT>:
iptables -t nat -A PREROUTING  -d $SRC_HOST -p tcp --dport $SRC_PORT -j DNAT --to-destination $DST_HOST:$DST_PORT
iptables -t nat -A POSTROUTING -d $DST_HOST -p tcp --dport $DST_PORT -j SNAT --to-source $SRC_HOST
"
}

if [ -r ~/.rc_local ]; then
	. ~/.rc_local
fi

if [ -x "$(which dircolors 2>/dev/null)" ]; then
	eval $(dircolors)
fi

webui="${RAILS/BRANCH*/}"

case $- in
	*i*)
		# only with interactive non-sudo shell
		if [ -n "$SSH_CLIENT" ] && [ -z "$SUDO_UID" ]; then
			[ "$(parent)" = "screen" ] || screen -RR
		fi
		;;
esac

# vim: ft=sh
